{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/server/app.ts","webpack:///./src/server/const/const.ts","webpack:///./src/server/index.ts","webpack:///./src/server/objects/Player.ts","webpack:///./src/server/objects/Skill.ts","webpack:///./src/shared/const.ts","webpack:///external \"express\"","webpack:///external \"http\"","webpack:///external \"mysql\"","webpack:///external \"path\"","webpack:///external \"socket.io\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;AClFA,OAAO,CAAC,GAAG,CAAC,uCAAuC,CAAC,CAAC;AACrD,kFAAyC;AACzC,sFAAsC;AAEtC,sDAA+B;AAC/B,qDAA4C;AAC5C,4DAAmC;AACnC,iEAAsC;AACtC,mDAA6B;AAC7B,6FAAyC;AAGzC;IAeI;QAPQ,aAAQ,GAAG;YACf,IAAI,EAAU,aAAK,CAAC,IAAI;YACxB,IAAI,EAAU,aAAK,CAAC,MAAM;YAC1B,QAAQ,EAAM,aAAK,CAAC,UAAU;YAC9B,QAAQ,EAAM,EAAE;SACnB,CAAC;QAGE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,YAAY,EAAE,CAAC;QACpB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,SAAS,EAAE,CAAC;IACrB,CAAC;IAEO,uBAAS,GAAjB;QACI,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;IACzB,CAAC;IAEO,0BAAY,GAApB;QACI,IAAI,CAAC,MAAM,GAAG,mBAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzC,CAAC;IAEO,oBAAM,GAAd;QACI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG;YAChC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,0BAA0B,CAAC,CAAC,CAAC;YAAA,CAAC;QAC5D,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACpE,CAAC;IAEO,oBAAM,GAAd;QACI,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;IACzC,CAAC;IAEO,qBAAO,GAAf;QACI,IAAI,CAAC,EAAE,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAAA,CAAC;IAC5C,CAAC;IAEO,yBAAW,GAAnB;QACI,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC7C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAI,EAAE;YACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBACxB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,IAAI,EAAE,KAAG,cAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAI,EAAC,CAAC;aACrE;SAEJ;IAEL,CAAC;IAEO,oBAAM,GAAd;QAAA,iBAkDC;QAjDG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,mDAAiD,KAAI,CAAC,IAAI,OAAI,CAAC,CAAC;QAChF,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,UAAC,MAA6B;YAChD,OAAO,CAAC,GAAG,CAAC,qDAAmD,KAAI,CAAC,IAAI,OAAI,CAAC,CAAC;YAC9E,MAAM,CAAC,EAAE,CAAC,qBAAqB,EAAE,UAAC,CAAS;gBACvC,OAAO,CAAC,GAAG,CAAC,4BAA0B,CAAC,OAAI,CAAC,CAAC;gBAC7C,KAAI,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,yBAAyB,CAAC,CAAC;YAClE,CAAC,CAAC,CAAC;YAEH,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,UAAe;gBAChC,IAAI,GAAG,GAAG,0DAA0D,CAAC;gBACrE,IAAI,KAAK,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,QAAQ,EAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,UAAC,GAAG,EAAE,GAAG;oBAC/E,IAAI,GAAG,EAAE;wBACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;qBAC7C;yBAAK,IAAG,GAAG,CAAC,MAAM,KAAK,CAAC,EAAC;wBACtB,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,wCAAwC,CAAC,CAAC;qBAC7E;yBAAI;wBACD,OAAO,CAAC,GAAG,CAAC,4CAA4C,CAAC;wBACzD,OAAO,CAAC,GAAG,CAAC,kCAAgC,UAAU,CAAC,QAAQ,OAAI,CAAC;wBACpE,OAAO,CAAC,GAAG,CAAC,kCAAgC,UAAU,CAAC,QAAQ,OAAI,CAAC;wBACpE,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;qBAC/D;gBACL,CAAC,CAAC;YACN,CAAC,CAAC;YAEF,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAC,UAAU;gBAC3B,IAAI,UAAU,GAAG,EAAE,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAAE,QAAQ,EAAE,UAAU,CAAC,QAAQ,EAAC;gBAChF,IAAI,GAAG,GAAG,0BAA0B,CAAC;gBACrC,IAAI,KAAK,GAAG,KAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,EAAE,UAAC,GAAG,EAAE,GAAG;oBAChD,IAAG,GAAG,EAAC;wBACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,IAAG,GAAG,CAAC,IAAI,KAAK,cAAc,EAAC;4BAC3B,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,iCAAiC,CAAC,CAAC;yBACtE;6BAAI;4BACD,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC;yBAC7C;qBACJ;yBAAI;wBACD,IAAI,MAAM,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,EAAE,EAAC,MAAM,EAAE,EAAC,EAAE,EAAC,GAAG,CAAC,QAAQ,EAAC,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC,CAAC;qBACpF;gBACL,CAAC,CAAC;YACN,CAAC,CAAC;YAEF,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE;gBACxB,OAAO,CAAC,GAAG,CAAC,8CAA8C,CAAC,CAAC;YAC5D,CAAC,CAAC,CAAC;QACP,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,0BAAY,GAApB,UAAqB,MAA6B,EAAE,UAAe;QAC/D,IAAI,MAAM,GAAG,IAAI,eAAM,CAAC,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IAClE,CAAC;IAEO,uBAAS,GAAjB;QAAA,iBAqCC;QApCG,IAAI,EAAE,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/C,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,aAAK,CAAC,QAAQ,CAAC;QACxC,EAAE,GAAG,KAAK,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,EAAE,CAAC,OAAO,CAAC,UAAC,GAAG;YACX,IAAI,GAAG,EAAE;gBACL,MAAM,GAAG;aACZ;iBAAK;gBACF,OAAO,CAAC,GAAG,CAAC,4BAA0B,aAAK,CAAC,QAAQ,0BAAuB,CAAC,CAAC;gBAC7E,IAAI,GAAG,GAAG,8PAA8P;gBACxQ,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,UAAC,GAAG,EAAE,MAAM;oBACtB,IAAI,GAAG,EAAE;wBACL,MAAM,GAAG;qBACZ;yBAAK;wBACF,OAAO,CAAC,GAAG,CAAC,4BAA0B,aAAK,CAAC,QAAQ,6BAA0B,CAAC,CAAC;qBACnF;gBACL,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,EAAE,GAAG,EAAE,CAAC;aAChB;QACL,CAAC,CAAC,CAAC;IAkBP,CAAC;IA1JsB,QAAI,GAAU,IAAI,CAAC;IA2J9C,UAAC;CAAA;AA5JY,kBAAG;;;;;;;;;;;;;;;ACZL,aAAK,GAAG;IAGf,IAAI,EAAE,kCAAkC;IACxC,MAAM,EAAG,gBAAgB;IACzB,UAAU,EAAE,UAAU;IACtB,QAAQ,EAAE,wBAAwB;IAGlC,YAAY,EAAE,IAAI;IAClB,cAAc,EAAE,GAAG;IAGnB,MAAM,EAAE;QACJ,SAAS;QACT,QAAQ;QACR,SAAS;QACT,UAAU;KACb;CAEJ;;;;;;;;;;;;;;;ACpBD,oEAA4B;AAG5B,IAAI,GAAG,GAAG,IAAI,SAAG,EAAE,CAAC;;;;;;;;;;;;;;;ACFpB,uFAAuC;AACvC,kFAAyC;AAGzC,IAAM,aAAa,GAAuB,IAAI,KAAK,EAAe,CAAC;AAEnE;IAUI,gBAAY,EAAmB,EAAE,MAA6B,EAAE,EAAoB,EAAE,UAAe;QAClG,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,iBAAS,EAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9B,IAAG,UAAU,CAAC,KAAK,EAAC;YAChB,IAAI,CAAC,eAAe,EAAE,CAAC;SAC1B;aAAI;YACD,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;SACzC;IACL,CAAC;IAEO,8BAAa,GAArB,UAAsB,UAAe;QACjC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAC3B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE;YACzB,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM;SAC5F,CAAC,CAAC;IACP,CAAC;IAEO,gCAAe,GAAvB;QACI,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,aAAK,CAAC,YAAY,CAAC;QAC/B,IAAI,CAAC,MAAM,GAAG,aAAK,CAAC,cAAc,CAAC;QACnC,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE;YACzB,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM;SAC5F,CAAC,CAAC;IACP,CAAC;IAEO,8BAAa,GAArB;QACI,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,aAAa,CAAC,MAAM,CAAC;QACjE,IAAI,CAAC,KAAK,GAAI,aAAa,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC;IACnD,CAAC;IAAA,CAAC;IAIM,+BAAc,GAAtB;QAAA,iBAUC;QATG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,eAAe,GAAG,aAAa,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,KAAI,CAAC,KAAK,EAArB,CAAqB,CAAC;QACpE,eAAe,CAAC,MAAM,CAAC,OAAO,CAAC,WAAC;YAC5B,IAAI,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAjB,CAAiB,CAAC;YACpD,IAAG,KAAK,KAAK,SAAS,EAAC;gBACnB,OAAO;aACV;YACD,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,CAAC;QAC3B,CAAC,CAAC,CAAC;IACP,CAAC;IAEM,0BAAS,GAAhB,UAAiB,UAAe;gCACpB,CAAC;YACL,OAAK,MAAM,CAAC,OAAO,CAAC,eAAK;gBACrB,IAAG,CAAC,KAAK,KAAK,CAAC,IAAI,EAAC;iBAEnB;YACL,CAAC,CAAC,CAAC;QACP,CAAC;;QAND,KAAI,IAAI,CAAC,IAAI,UAAU;oBAAf,CAAC;SAMR;IACL,CAAC;IAEM,qCAAoB,GAA3B;QACI,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,WAAC;YACjB,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,EAAE,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,+BAAc,GAAtB;QAAA,iBAqBC;QApBG,IAAI,GAAG,GAAG,oHAAoH,CAAC;QAC/H,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EACb;YACI,IAAI,CAAC,IAAI;YACT,IAAI,CAAC,MAAM;YACX,IAAI,CAAC,KAAK;YACV,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,SAAS,EAApB,CAAoB,CAAC,CAAC,KAAK;YACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,QAAQ,EAAnB,CAAmB,CAAC,CAAC,KAAK;YAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,SAAS,EAApB,CAAoB,CAAC,CAAC,KAAK;YACjD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,UAAU,EAArB,CAAqB,CAAC,CAAC,KAAK;YAClD,IAAI,CAAC,EAAE;SACV,EACD,UAAC,GAAG,EAAE,GAAG;YACL,IAAG,GAAG,EAAC;gBACH,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aACpB;iBAAI;gBACD,OAAO,CAAC,GAAG,CAAC,mCAAiC,KAAI,CAAC,EAAE,4BAAyB,CAAC,CAAC;aAClF;QACL,CAAC,CACJ;IACL,CAAC;IAED,6BAAY,GAAZ,UAAa,IAAS;IAEtB,CAAC;IAGL,aAAC;AAAD,CAAC;AA3GY,wBAAM;AA+GnB;IAGI,qBAAY,IAAW,EAAE,MAAe;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IACL,kBAAC;AAAD,CAAC;AAED,aAAa,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,OAAO,EAAE,CAAE,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC;AACvI,aAAa,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC;AACxI,aAAa,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC;AACxI,aAAa,CAAC,IAAI,CAAC,IAAI,WAAW,CAAC,SAAS,EAAE,CAAE,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC;;;;;;;;;;;;;;;AClI1I,uFAAuC;AAEvC;IAKI,eAAY,IAAW;QACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;IACtB,CAAC;IACL,YAAC;AAAD,CAAC;AAVY,sBAAK;AAYlB,SAAgB,SAAS;IACzB,IAAI,MAAM,GAAiB,IAAI,KAAK,EAAS,CAAC;IAC9C,aAAK,CAAC,MAAM,CAAC,OAAO,CAAC,WAAC;QAClB,MAAM,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AACd,CAAC;AAND,8BAMC;;;;;;;;;;;;;;;ACpBU,cAAM,GAAG;IAGhB,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IACnC,QAAQ,EAAE,GAAG;CAEhB;;;;;;;;;;;;ACND,oC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,sC","file":"./server/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server/index.ts\");\n","console.log(\"\\n\\n===============>\\t app starting\\n\");\r\nimport { SHARED } from \"../shared/const\";\r\nimport { CONST } from './const/const';\r\n\r\nimport * as mysql from 'mysql';\r\nimport { createServer, Server } from 'http';\r\nimport * as express from 'express';\r\nimport * as socketIo from 'socket.io';\r\nimport * as path from 'path';\r\nimport { Player } from './objects/Player'\r\n\r\n\r\nexport class App {\r\n    public static readonly PORT:number = 8080;\r\n    public app: express.Application;\r\n    private server: Server;\r\n    public io: SocketIO.Server;\r\n    private port: string | number;\r\n    public db: mysql.Connection;\r\n    public zones: any[][];\r\n    private dbConfig = {\r\n        host        : CONST.HOST,\r\n        user        : CONST.DBUSER,\r\n        password    : CONST.DBPASSWORD,\r\n        database    : ''\r\n    };\r\n\r\n    constructor() {\r\n        this.createApp();\r\n        this.config();\r\n        this.createServer();\r\n        this.Routes();\r\n        this.sockets();\r\n        this.listen();\r\n        this.CreateZones();\r\n        this.dbConnect();\r\n    }\r\n\r\n    private createApp(): void {\r\n        this.app = express();\r\n    }\r\n\r\n    private createServer(): void {\r\n        this.server = createServer(this.app);\r\n    }\r\n\r\n    private Routes(): void {\r\n        this.app.use(express.static('./dist/client'));\r\n        this.app.get('/', function (req, res) {\r\n            res.sendFile(path.resolve('./dist/client/index.html'));;\r\n        });\r\n        this.app.use(\"/assets\", express.static('./dist/client/assets'));\r\n    }\r\n\r\n    private config(): void {\r\n        this.port = process.env.PORT || 4001;\r\n    }\r\n\r\n    private sockets(): void {\r\n        this.io = socketIo.listen(this.server);;\r\n    }\r\n\r\n    private CreateZones(): void {\r\n        this.zones = [];\r\n        for (let i = 0; i < SHARED.ZONELTRS.length; i++) {\r\n            this.zones[i]  = []\r\n            for (let j = 1; j < 6; j++) {\r\n                this.zones[i][j] = {name: `${SHARED.ZONELTRS[i]}${j.toString()}`};\r\n            }\r\n            \r\n        }\r\n        // TODO: add more propties in zones\r\n    }\r\n\r\n    private listen(): void {\r\n        this.server.listen(this.port, () => {\r\n            console.log(`\\n\\n===============>\\t running server on port ${this.port}\\n`);\r\n        });\r\n\r\n        this.io.on('connect', (socket: socketIo.EngineSocket) => {\r\n            console.log(`\\n\\n===============>\\t connected client on port ${this.port}\\n`);\r\n            socket.on('messageFromFrontend', (m: string) => {\r\n                console.log(`\\n\\n===============>\\t ${m}\\n`);\r\n                this.io.emit('messageFromBackend', 'Hello from the backend!');\r\n            });\r\n\r\n            socket.on('signIn', (signInInfo: any) => {\r\n                let sql = 'SELECT * FROM player WHERE username = ? AND password = ?';\r\n                var query = this.db.query(sql, [signInInfo.username,signInInfo.password], (err, res) => {\r\n                    if (err) {\r\n                        console.log(err);\r\n                        socket.emit('errorFromBackend', err.code);                        \r\n                    }else if(res.length === 0){\r\n                        socket.emit('errorFromBackend', 'username and or password was incorrect');                 \r\n                    }else{\r\n                        console.log(`\\n\\n===============>\\t Player logging in\\n`)\r\n                        console.log(`===============>\\t username: ${signInInfo.username}\\n`)\r\n                        console.log(`===============>\\t password: ${signInInfo.password}\\n`)\r\n                        this.CreatePlayer(socket, { player: res[0], isNew: false });\r\n                    }\r\n                })\r\n            })\r\n\r\n            socket.on('signUp', (signUpInfo) => {\r\n                let postPlayer = { username: signUpInfo.username, password: signUpInfo.password}\r\n                let sql = 'INSERT INTO player SET ?';\r\n                let query = this.db.query(sql, postPlayer, (err, res) => {\r\n                    if(err){\r\n                        console.log(err);\r\n                        if(err.code === 'ER_DUP_ENTRY'){\r\n                            socket.emit('errorFromBackend', 'this username is already in use');\r\n                        }else{\r\n                            socket.emit('errorFromBackend', err.code);\r\n                        }\r\n                    }else{\r\n                        let player = this.CreatePlayer(socket, {player: {id:res.insertId}, isNew: true});\r\n                    }\r\n                }) \r\n            })\r\n            \r\n            socket.on('disconnect', () => {\r\n            console.log(`\\n\\n===============>\\t client disconnected\\n`);\r\n            });\r\n        });\r\n    }\r\n\r\n    private CreatePlayer(socket: socketIo.EngineSocket, playerInfo: any): void {\r\n        let player = new Player(this.io, socket, this.db, playerInfo);\r\n    }\r\n\r\n    private dbConnect(): void {\r\n        var db = mysql.createConnection(this.dbConfig);\r\n        this.dbConfig.database = CONST.DATABASE;\r\n        db = mysql.createConnection(this.dbConfig);\r\n        db.connect((err) => {\r\n            if (err) {\r\n                throw err\r\n            }else {\r\n                console.log(`\\n\\n===============>\\t ${CONST.DATABASE} database connected\\n`);\r\n                let sql = \"CREATE TABLE IF NOT EXISTS Player(id int AUTO_INCREMENT, username VARCHAR(30), password VARCHAR(255), zone VARCHAR(30), health int, class VARCHAR(30), farming int, mining int, fighting int, healing int, PRIMARY KEY (id), UNIQUE KEY username (username))\"\r\n                db.query(sql, (err, result) => {\r\n                    if (err) {\r\n                        throw err\r\n                    }else {\r\n                        console.log(`\\n\\n===============>\\t ${CONST.DATABASE} database tables check\\n`);\r\n                    }\r\n                });\r\n                this.db = db;\r\n            }\r\n        }); \r\n        // db.connect((err) => {\r\n        //     if (err) {\r\n        //         throw err\r\n        //     }else {\r\n        //         console.log(`\\n\\n===============>\\t mySQL connected\\n`);\r\n        //         let sql = 'CREATE DATABASE IF NOT EXISTS elevaidus';\r\n        //         db.query(sql, (err, result) => {\r\n        //             if (err) {\r\n        //                 throw err\r\n        //             }else {\r\n        //                 console.log(`\\n\\n===============>\\t database check\\n`);\r\n        //                 db.end();\r\n                        \r\n        //             }\r\n        //         })\r\n        //     }\r\n        // });\r\n    }\r\n}\r\n","export let CONST = {\r\n    // mySQL database settings\r\n    // mysql://b07173e9b72118:45517a09@us-cdbr-iron-east-01.cleardb.net/heroku_4d115db42117719?reconnect=true\r\n    HOST: 'us-cdbr-iron-east-01.cleardb.net', //'localhost',\r\n    DBUSER:  'b07173e9b72118', //'elevaidus',\r\n    DBPASSWORD: '45517a09', //'mysqlP@$$w0rd',\r\n    DATABASE: 'heroku_4d115db42117719', //'elevaidus',\r\n\r\n    // player settings\r\n    STARTINGZONE: 'a1',\r\n    STARTINGHEALTH: 100,\r\n\r\n    // skills\r\n    SKILLS: [\r\n        'farming',\r\n        'mining',\r\n        'healing',\r\n        'fighting'\r\n    ]\r\n\r\n}\r\n","import { App } from './app';\r\n\r\n//start application\r\nvar app = new App();\r\n","import * as mysql from 'mysql';\r\nimport { CONST } from '../const/const';\r\nimport {Skill, GetSkills} from './Skill';\r\n\r\n// TODO: Import class array from json\r\nconst playerClasses: Array<PlayerClass> = new Array<PlayerClass>();\r\n\r\nexport class Player {\r\n    private io: SocketIO.Server;\r\n    private socket: SocketIO.EngineSocket;\r\n    private db: mysql.Connection;\r\n    public class: string;\r\n    public skills: Skill[]; \r\n    public id: number;\r\n    public zone: string;\r\n    public health: number;\r\n\r\n    constructor(io: SocketIO.Server, socket: SocketIO.EngineSocket, db: mysql.Connection, playerInfo: any){\r\n       this.io = io;\r\n       this.socket = socket;\r\n       this.db = db;\r\n       this.skills = GetSkills();\r\n       this.id = playerInfo.player.id;\r\n        if(playerInfo.isNew){\r\n            this.CreateNewPlayer();\r\n        }else{\r\n            this.SetPlayerInfo(playerInfo.player);\r\n        }\r\n    }\r\n\r\n    private SetPlayerInfo(playerInfo: any): void {\r\n        this.SetSkills(playerInfo);\r\n        this.class = playerInfo.class;\r\n        this.zone = playerInfo.zone;\r\n        this.health = playerInfo.health;\r\n        this.socket.emit('signedIn', {\r\n            id: this.id, skills: this.skills, class: this.class, zone: this.zone, health: this.health\r\n        });\r\n    }\r\n\r\n    private CreateNewPlayer(): void {\r\n        this.GenerateClass();\r\n        this.GenerateSkills();\r\n        this.zone = CONST.STARTINGZONE;\r\n        this.health = CONST.STARTINGHEALTH;\r\n        this.saveInDatabase();\r\n        this.socket.emit('signedUp', {\r\n            id: this.id, skills: this.skills, class: this.class, zone: this.zone, health: this.health\r\n        });\r\n    }\r\n\r\n    private GenerateClass(): void {\r\n        var randomNumber = Math.floor(Math.random()*playerClasses.length) \r\n        this.class =  playerClasses[randomNumber].name;\r\n    };\r\n\r\n\r\n\r\n    private GenerateSkills(): void {\r\n        this.GenerateRandomSkills();\r\n        let thisPlayerClass = playerClasses.find(i => i.name === this.class)\r\n        thisPlayerClass.skills.forEach(i => {\r\n            let skill = this.skills.find(j => j.name === i.name)\r\n            if(skill === undefined){\r\n                return;\r\n            }\r\n            skill.level += i.level;\r\n        });\r\n    }\r\n\r\n    public SetSkills(playerInfo: any): void {\r\n        for(let i in playerInfo){\r\n            this.skills.forEach(skill => {\r\n                if(i === skill.name){\r\n                    // i.valueOf = skill.level;\r\n                }               \r\n            });\r\n        }\r\n    }\r\n\r\n    public GenerateRandomSkills(): void {\r\n        this.skills.forEach(i => {\r\n            i.level = Math.floor(Math.random()*26)\r\n        });\r\n    }\r\n\r\n    private saveInDatabase(): void {\r\n        let sql = 'UPDATE player SET zone = ?, health = ?, class = ?, farming = ?, mining = ?, healing = ?, fighting = ? WHERE id = ?';\r\n        this.db.query(sql, \r\n            [\r\n                this.zone,\r\n                this.health,\r\n                this.class,\r\n                this.skills.find(i => i.name === 'farming').level,\r\n                this.skills.find(i => i.name === 'mining').level,\r\n                this.skills.find(i => i.name === 'healing').level,\r\n                this.skills.find(i => i.name === 'fighting').level,\r\n                this.id\r\n            ],\r\n            (err, res) =>{\r\n                if(err){\r\n                    console.log(err);\r\n                }else{\r\n                    console.log(`\\n\\n===============>\\t Player ${this.id} updated in database \\n`);\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    PlayerUpdate(data: any){\r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nclass PlayerClass {\r\n    name: string;\r\n    skills: Skill[];\r\n    constructor(name:string, skills: Skill[]){\r\n        this.name = name;\r\n        this.skills = skills;\r\n    }\r\n}\r\n\r\nplayerClasses.push(new PlayerClass(\"miner\", [ {name: 'mining', level: 25, progress: 0 }, {name: 'fighting', level: 5, progress: 0 } ]))\r\nplayerClasses.push(new PlayerClass(\"farmer\", [ {name: 'farming', level: 25, progress: 0 }, {name: 'healing', level: 5, progress: 0 } ]))\r\nplayerClasses.push(new PlayerClass(\"priest\", [ {name: 'healing', level: 25, progress: 0 }, {name: 'farming', level: 5, progress: 0 } ]))\r\nplayerClasses.push(new PlayerClass(\"fighter\", [ {name: 'fighting', level: 25, progress: 0 }, {name: 'healing', level: 5, progress: 0 } ]))\r\n","import { CONST } from '../const/const';\r\n\r\nexport class Skill {\r\n    name: string;\r\n    level: number;\r\n    progress: number;\r\n\r\n    constructor(name:string){\r\n        this.name = name;\r\n        this.level = 0;\r\n        this.progress = 0;\r\n    }\r\n}\r\n\r\nexport function GetSkills(){\r\nlet skills: Array<Skill> = new Array<Skill>();\r\nCONST.SKILLS.forEach(i => {\r\n    skills.push(new Skill(i))    \r\n});\r\nreturn skills;\r\n}","export let SHARED = {\r\n    \r\n    // map zones\r\n    ZONELTRS: ['a', 'b', 'c', 'd', 'e'],\r\n    ZONESIZE: 128,\r\n\r\n}","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"mysql\");","module.exports = require(\"path\");","module.exports = require(\"socket.io\");"],"sourceRoot":""}